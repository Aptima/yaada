yaada {
  data_prefix = {{cookiecutter.prefix}}
  data_prefix = ${?YAADA_DATA_PREFIX}
  tenant = {{cookiecutter.tenant}}
  tenant = ${?YAADA_TENANT}

  openapi {
    ip = 0.0.0.0
    ip = ${?OPENAPI_SERVER_IP}
    port = 5000
    port = ${?OPENAPI_SERVER_PORT}
    spec_module = "yaada.openapi"
  }
  message_provider = mqtt
  message_provider = ${?MESSAGE_PROVIDER}
  debug = false

  objectstorage {
    enabled=true
    enabled=${?OBJECT_STORAGE_ENABLED}
    access_key_id = AptimaKey
    access_key_id = ${?OBJECT_STORAGE_ACCESS_KEY_ID}
    secret_access_key = AptimaSecret
    secret_access_key = ${?OBJECT_STORAGE_SECRET_ACCESS_KEY}
    url = 127.0.0.1:8000
    url = ${?OBJECT_STORAGE_URL}
    location = us-east-1
    location = ${?OBJECT_STORAGE_LOCATION}
    bucket = yaada
    bucket = ${?OBJECT_STORAGE_BUCKET}
    secure = false
    secure = ${?OBJECT_STORAGE_SECURE}
    make_bucket = true
    make_bucket = ${?OBJECT_STORAGE_MAKE_BUCKET}
  }
  opensearch {
    url = 127.0.0.1:9200
    url = ${?OPENSEARCH_URL}
    username = ${?OPENSEARCH_USERNAME}
    password = ${?OPENSEARCH_PASSWORD}
  }

  mqtt {
    host = 127.0.0.1
    host = ${?MQTT_HOSTNAME}
    port = 1883
    port = ${?MQTT_PORT}
    topics {
      ingest=ingest
      ingest = ${?MQTT_INGEST_TOPIC}
      sink=sink
      sink = ${?MQTT_SINK_TOPIC}
      sinklog=sinklog
      sinklog = ${?MQTT_SINKLOG_TOPIC}
    }
  }

  ingest {
    buffer {
      size = 10
      size = ${?INGEST_BUFF_SIZE}
      timeout = 1.0
      timeout = ${?INGEST_BUFF_BLOCKING_TIMEOUT}
    }
    workers = 32
    workers = ${?INGEST_WORKERS}
    preprocessors=[]
    processors {}
  }
  modelcache {
    size = 100
    size = ${?MODEL_CACHE_SIZE}
  }
  analytics = [
  ]
  pipelines {}
}
